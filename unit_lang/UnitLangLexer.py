# Generated from UnitLang.g4 by ANTLR 4.13.2
import sys

from antlr4 import *

if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,
        0,
        7,
        66,
        6,
        -1,
        2,
        0,
        7,
        0,
        2,
        1,
        7,
        1,
        2,
        2,
        7,
        2,
        2,
        3,
        7,
        3,
        2,
        4,
        7,
        4,
        2,
        5,
        7,
        5,
        2,
        6,
        7,
        6,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        2,
        1,
        2,
        1,
        3,
        1,
        3,
        1,
        3,
        1,
        3,
        3,
        3,
        26,
        8,
        3,
        1,
        4,
        3,
        4,
        29,
        8,
        4,
        1,
        4,
        4,
        4,
        32,
        8,
        4,
        11,
        4,
        12,
        4,
        33,
        1,
        4,
        1,
        4,
        5,
        4,
        38,
        8,
        4,
        10,
        4,
        12,
        4,
        41,
        9,
        4,
        3,
        4,
        43,
        8,
        4,
        1,
        4,
        1,
        4,
        4,
        4,
        47,
        8,
        4,
        11,
        4,
        12,
        4,
        48,
        3,
        4,
        51,
        8,
        4,
        1,
        5,
        1,
        5,
        5,
        5,
        55,
        8,
        5,
        10,
        5,
        12,
        5,
        58,
        9,
        5,
        1,
        6,
        4,
        6,
        61,
        8,
        6,
        11,
        6,
        12,
        6,
        62,
        1,
        6,
        1,
        6,
        0,
        0,
        7,
        1,
        1,
        3,
        2,
        5,
        3,
        7,
        4,
        9,
        5,
        11,
        6,
        13,
        7,
        1,
        0,
        5,
        2,
        0,
        43,
        43,
        45,
        45,
        1,
        0,
        48,
        57,
        3,
        0,
        65,
        90,
        95,
        95,
        97,
        122,
        4,
        0,
        48,
        57,
        65,
        90,
        95,
        95,
        97,
        122,
        3,
        0,
        9,
        10,
        13,
        13,
        32,
        32,
        74,
        0,
        1,
        1,
        0,
        0,
        0,
        0,
        3,
        1,
        0,
        0,
        0,
        0,
        5,
        1,
        0,
        0,
        0,
        0,
        7,
        1,
        0,
        0,
        0,
        0,
        9,
        1,
        0,
        0,
        0,
        0,
        11,
        1,
        0,
        0,
        0,
        0,
        13,
        1,
        0,
        0,
        0,
        1,
        15,
        1,
        0,
        0,
        0,
        3,
        17,
        1,
        0,
        0,
        0,
        5,
        19,
        1,
        0,
        0,
        0,
        7,
        25,
        1,
        0,
        0,
        0,
        9,
        28,
        1,
        0,
        0,
        0,
        11,
        52,
        1,
        0,
        0,
        0,
        13,
        60,
        1,
        0,
        0,
        0,
        15,
        16,
        5,
        40,
        0,
        0,
        16,
        2,
        1,
        0,
        0,
        0,
        17,
        18,
        5,
        41,
        0,
        0,
        18,
        4,
        1,
        0,
        0,
        0,
        19,
        20,
        5,
        94,
        0,
        0,
        20,
        6,
        1,
        0,
        0,
        0,
        21,
        26,
        5,
        47,
        0,
        0,
        22,
        23,
        5,
        112,
        0,
        0,
        23,
        24,
        5,
        101,
        0,
        0,
        24,
        26,
        5,
        114,
        0,
        0,
        25,
        21,
        1,
        0,
        0,
        0,
        25,
        22,
        1,
        0,
        0,
        0,
        26,
        8,
        1,
        0,
        0,
        0,
        27,
        29,
        7,
        0,
        0,
        0,
        28,
        27,
        1,
        0,
        0,
        0,
        28,
        29,
        1,
        0,
        0,
        0,
        29,
        50,
        1,
        0,
        0,
        0,
        30,
        32,
        7,
        1,
        0,
        0,
        31,
        30,
        1,
        0,
        0,
        0,
        32,
        33,
        1,
        0,
        0,
        0,
        33,
        31,
        1,
        0,
        0,
        0,
        33,
        34,
        1,
        0,
        0,
        0,
        34,
        42,
        1,
        0,
        0,
        0,
        35,
        39,
        5,
        46,
        0,
        0,
        36,
        38,
        7,
        1,
        0,
        0,
        37,
        36,
        1,
        0,
        0,
        0,
        38,
        41,
        1,
        0,
        0,
        0,
        39,
        37,
        1,
        0,
        0,
        0,
        39,
        40,
        1,
        0,
        0,
        0,
        40,
        43,
        1,
        0,
        0,
        0,
        41,
        39,
        1,
        0,
        0,
        0,
        42,
        35,
        1,
        0,
        0,
        0,
        42,
        43,
        1,
        0,
        0,
        0,
        43,
        51,
        1,
        0,
        0,
        0,
        44,
        46,
        5,
        46,
        0,
        0,
        45,
        47,
        7,
        1,
        0,
        0,
        46,
        45,
        1,
        0,
        0,
        0,
        47,
        48,
        1,
        0,
        0,
        0,
        48,
        46,
        1,
        0,
        0,
        0,
        48,
        49,
        1,
        0,
        0,
        0,
        49,
        51,
        1,
        0,
        0,
        0,
        50,
        31,
        1,
        0,
        0,
        0,
        50,
        44,
        1,
        0,
        0,
        0,
        51,
        10,
        1,
        0,
        0,
        0,
        52,
        56,
        7,
        2,
        0,
        0,
        53,
        55,
        7,
        3,
        0,
        0,
        54,
        53,
        1,
        0,
        0,
        0,
        55,
        58,
        1,
        0,
        0,
        0,
        56,
        54,
        1,
        0,
        0,
        0,
        56,
        57,
        1,
        0,
        0,
        0,
        57,
        12,
        1,
        0,
        0,
        0,
        58,
        56,
        1,
        0,
        0,
        0,
        59,
        61,
        7,
        4,
        0,
        0,
        60,
        59,
        1,
        0,
        0,
        0,
        61,
        62,
        1,
        0,
        0,
        0,
        62,
        60,
        1,
        0,
        0,
        0,
        62,
        63,
        1,
        0,
        0,
        0,
        63,
        64,
        1,
        0,
        0,
        0,
        64,
        65,
        6,
        6,
        0,
        0,
        65,
        14,
        1,
        0,
        0,
        0,
        10,
        0,
        25,
        28,
        33,
        39,
        42,
        48,
        50,
        56,
        62,
        1,
        6,
        0,
        0,
    ]


class UnitLangLexer(Lexer):
    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [DFA(ds, i) for i, ds in enumerate(atn.decisionToState)]

    LEFT_BR = 1
    RIGHT_BR = 2
    POWER_OP = 3
    PER_OP = 4
    NUMBER = 5
    UNIT = 6
    WS = 7

    channelNames = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN"]

    modeNames = ["DEFAULT_MODE"]

    literalNames = ["<INVALID>", "'('", "')'", "'^'"]

    symbolicNames = [
        "<INVALID>",
        "LEFT_BR",
        "RIGHT_BR",
        "POWER_OP",
        "PER_OP",
        "NUMBER",
        "UNIT",
        "WS",
    ]

    ruleNames = ["LEFT_BR", "RIGHT_BR", "POWER_OP", "PER_OP", "NUMBER", "UNIT", "WS"]

    grammarFileName = "UnitLang.g4"

    def __init__(self, input=None, output: TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(
            self, self.atn, self.decisionsToDFA, PredictionContextCache()
        )
        self._actions = None
        self._predicates = None
